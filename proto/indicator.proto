syntax = "proto3";

package indicator;

import "google/protobuf/empty.proto";
import "datasource.proto";

enum RmqExchangeTypesEnum {
  UNKNOWN_EXCHANGE_TYPE = 0;
  DIRECT = 1;
  FANOUT = 2;
  HEADERS = 3;
  TOPIC = 4;
}

enum RegisterTypesEnum {
  UNKNOWN_REGISTER_TYPE = 0;
  COILS = 1;
  INPUTS = 2;
  REGISTERS = 3;
  QUEUE = 4;
}

enum TypeValuesEnum {
  UNKNOWN_TYPE_VALUE = 0;
  INT16 = 1;
  INT32 = 2;
  LONG = 3;
  DOUBLE = 4;
  BOOL = 5;
}

enum EndiansEnum {
  UNKNOWN_ENDIAN = 0;
  BIG = 1;
  LITTLE = 2;
}

enum SubscriptionModesEnum {
  UNKNOWN_SUBSCRIPTION_MODE = 0;
  POLLING = 1;
  SUBSCRIPTION = 2;
}

message VariableModbusDataDto {
  RegisterTypesEnum registerType = 1;
  TypeValuesEnum typeValue = 2;
  EndiansEnum endian = 3;
  int32 startAddress = 4;
}

message IndicatorModuleDto {
  optional string id = 1;
  string dataSourceId = 2;
  string variableName = 3;
  string uom = 4;
  string uoc = 5;

  optional string sourceName = 6;
  optional datasource.DataSourceTypesEnum dataSourceType = 7;
  optional string group = 8;
  optional bool isExternal = 9;
  optional bool isDefault = 10;
  optional bool isPrimary = 11;

  // insite specific
  optional string record = 12;
  optional string descriptor = 13;
  optional bool isWellBased = 14;
  // mqtt specific
  optional string mqttServerAddress = 15;
  optional string mqttTopic = 16;
  // rmq specific
  optional string exchangeName = 17;
  optional RmqExchangeTypesEnum exchangeType = 18;
  optional bool exchangeDurable = 19;
  optional string routingKey = 20;
  // modbus specific
  optional int32 modbusSampleRate = 21;
  optional bool modbusReadBlocksData = 22;
  optional VariableModbusDataDto modbusData = 23;
  // opcua specific
  optional SubscriptionModesEnum subscriptionMode = 24;
  // wits0 specific
  optional int32 wits0SampleRate = 25;
  optional bool wits0Direction = 26;
  optional string variableId = 27;
}

message IndicatorDto {
  optional string id = 1;
  string name = 2;
  optional string description = 3;
  optional string group = 4;
  repeated string tags = 5;

  IndicatorModuleDto sensor = 6;
  repeated IndicatorModuleDto publishers = 7;
}

message IndicatorsDto {
  int32 total = 1;
  repeated IndicatorDto indicators = 2;
}

message IndicatorIdDto {
  string id = 1;
}


service IndicatorService {
  rpc createIndicator(IndicatorDto) returns (IndicatorDto);
  rpc getIndicatorById(IndicatorIdDto) returns (IndicatorDto);
  rpc getAllIndicators(google.protobuf.Empty) returns (IndicatorsDto);
}